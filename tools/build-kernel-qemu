#!/bin/bash -e
#
# Build ARM kernel for QEMU Raspberry Pi Emulation
#
#######################################################

# Revision number to form part of released version of qemu-rpi-kernel.
QEMU_RPI_KERNEL_REVISION=1

TOOLCHAIN=arm-linux-gnueabihf

##
# Change BRANCH if you want to change kernel version 
#
# Ideally this a tag from https://github.com/raspberrypi/linux/tags
# eg: raspberrypi-kernel_1.20160921-1
#
# On some occassions it appears the binaries included with Raspbian are not based on a tag.
# When this is the case, the following steps can be used to find the commit hash instead:
# 1) Mount the Raspbian image locally, or browse a 'booted' Raspbian and look in /usr/share/doc/raspberrypi-bootloader
# 1a) loopdev=$(sudo losetup -Pf --show 2016-11-25-raspbian-jessie-lite.img)
# 1b) sudo mount -o ro ${loopdev}p2 mountpoint/
# 1c) zgrep "firmware as of" mountpoint/usr/share/doc/raspberrypi-bootloader/changelog.Debian.gz | head -1 | awk '{ print $5 }'
# 1d) sudo umount mountpoint
# 1e) sudo losetup -d $loopdev
# 2) The output of 1c) provides the raspberry/firmware commit hash. Use this to determine the raspberrypi/linux commit hash.
# 2a) Eg. visit https://github.com/raspberrypi/firmware/tree/5d80cd839dd4fe283d573df2ec3f3829b09b33f0 and open extra/git_hash
# 3) The content of 2a) provides the desired kernel hash, eg: fa00f31867d8f7b7bb2ad2eb6c35f32fa468ca1e
# 3a) Set the BRANCH to this value.
#
# Current Version Raspbian 2016-11-25 - Kernel 4.4.34 (fa00f31867d8f7b7bb2ad2eb6c35f32fa468ca1e)
##
BRANCH=fa00f31867d8f7b7bb2ad2eb6c35f32fa468ca1e

if [ -f build-kernel-qemu.conf ] ; then
	. build-kernel-qemu.conf
fi

mkdir -p target

if [ -n "$BRANCH" ] ; then
	srcname=linux-${BRANCH}
	if [ ! -f $srcname.zip ] ; then
		wget https://github.com/raspberrypi/linux/archive/$BRANCH.zip -O $srcname.zip
	fi
	if [ -e $srcname ]; then
		rm -rf $srcname
	fi
	unzip -q $srcname.zip
	cd $srcname
else
	echo "BRANCH missing!" >&2
	exit 1
fi

patch -p1 < ../linux-arm.patch

make ARCH=arm versatile_defconfig
KERNEL_VERSION=$(make kernelversion)
echo "building qemu raspberry pi kernel kernel-qemu-$KERNEL_VERSION"

cat >> .config << EOF
CONFIG_CROSS_COMPILE="$TOOLCHAIN"
CONFIG_LOCALVERSION="-qemu-rpi-$QEMU_RPI_KERNEL_REVISION"
CONFIG_CPU_V6=y
CONFIG_ARM_ERRATA_411920=y
CONFIG_ARM_ERRATA_364296=y
CONFIG_AEABI=y
CONFIG_OABI_COMPAT=y
CONFIG_PCI=y
CONFIG_SCSI=y
CONFIG_SCSI_SYM53C8XX_2=y
CONFIG_BLK_DEV_LOOP=y
CONFIG_BLK_DEV_SD=y
CONFIG_BLK_DEV_SR=y
CONFIG_DEVTMPFS=y
CONFIG_DEVTMPFS_MOUNT=y
CONFIG_TMPFS=y
CONFIG_INPUT_EVDEV=y
CONFIG_EXT3_FS=y
CONFIG_EXT4_FS=y
CONFIG_VFAT_FS=y
CONFIG_SQUASHFS=y
CONFIG_SQUASHFS_XATTR=y
CONFIG_SQUASHFS_LZO=y
CONFIG_SQUASHFS_XZ=y
CONFIG_NLS_CODEPAGE_437=y
CONFIG_NLS_ISO8859_1=y
CONFIG_FONT_8x16=y
CONFIG_LOGO=y
CONFIG_VFP=y
CONFIG_CGROUPS=y

CONFIG_MMC_BCM2835=y
CONFIG_MMC_BCM2835_DMA=y
CONFIG_DMADEVICES=y
CONFIG_DMA_BCM2708=y

CONFIG_FHANDLE=y

CONFIG_OVERLAY_FS=y

CONFIG_EXT4_FS_POSIX_ACL=y
CONFIG_EXT4_FS_SECURITY=y
CONFIG_FS_POSIX_ACL=y

CONFIG_IKCONFIG=y
CONFIG_IKCONFIG_PROC=y
EOF

cat ../config_ip_tables >> .config

make -j 4 -k ARCH=arm CROSS_COMPILE=${TOOLCHAIN}- menuconfig
make -j 4 -k ARCH=arm CROSS_COMPILE=${TOOLCHAIN}- bzImage
cp arch/arm/boot/zImage ../target/kernel-$KERNEL_VERSION-qemu-rpi-$QEMU_RPI_KERNEL_REVISION
cd ..

